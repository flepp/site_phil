
$columns : 10;

@for $i from 1 through $columns{
    .#{goriddo}-#{$i}{
        width: (($maxGridWidth - ($gridMargin * ($i - 1))) / $i);
    }
}

@for $i from 1 through $columns{
    .#{goriddo-null}-#{$i}{
        width: (($maxGridWidth - ($gridMarginZero * ($i - 1))) / $i);
    }
}


@mixin lay-out($colNumber){

    width: (($maxGridWidth - ($gridMargin * ($colNumber - 1))) / $colNumber);
}

@mixin ratio($colNumber){

    padding-bottom: (($maxGridWidth - ($gridMargin * ($colNumber - 1))) / $colNumber);
}

@mixin lonm($colNumber){

    width: (($maxGridWidth - ($gridMarginZero * ($colNumber - 1))) / $colNumber);
}

@mixin twoThirds{

    $colNumber:3;
    width: $maxGridWidth - (($maxGridWidth - ($gridMargin * ($colNumber - 1))) / $colNumber) - $gridMargin;
}

@mixin threeFourths{

    $colNumber:4;
    width: $maxGridWidth - (($maxGridWidth - ($gridMargin * ($colNumber - 1))) / $colNumber) - $gridMargin;
}

@mixin push($colNumber){

    @if $colNumber == 2{

        left: (($maxGridWidth + ($gridMargin )) / $colNumber);

    }

      @else if $colNumber == 3{

        left: (($maxGridWidth + ($gridMargin )) / $colNumber);

    }

      @else if $colNumber == 4{

        left: (($maxGridWidth + ($gridMargin )) / $colNumber);

    }

}

@mixin pull($colNumber){

    @if $colNumber == 2{

        left: - (($maxGridWidth + ($gridMargin )) / $colNumber);

    }

     @else if $colNumber == 3{

        left: - (($maxGridWidth + ($gridMargin )) / $colNumber);

    }

      @else if $colNumber == 4{

        left: - (($maxGridWidth + ($gridMargin )) / $colNumber);

    }

}
